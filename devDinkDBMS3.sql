INSERT INTO BONUS(ENAME,JOB,SAL,COMM) SELECT ENAME, JOB, SAL, COMM FROM EMP;
SELECT * FROM BONUS;
ROLLBACK;
SELECT * FROM BONUS;

INSERT INTO BONUS(ENAME, JOB, SAL, COMM)
SELECT ENAME, JOB, SAL, DECODE(DEPTNO, 10, SAL*0.3, 20, SAL*0.2) + NVL(COMM,0)
FROM EMP WHERE DEPTNO IN(10,20);

SELECT * FROM BONUS;
COMMIT;

UPDATE EMP SET COMM = (SELECT AVG(COMM)/2 FROM EMP) WHERE COMM IS NULL OR COMM = 0;
COMMIT;

DELETE FROM BONUS WHERE SAL > (SELECT AVG(SAL) FROM EMP);
COMMIT;

SELECT SAL, SAL*100, SAL || '00', to_char(SAL)||'00' FROM EMP;

SELECT * FROM TAB;

SELECT DNAME, ENAME, JOB, SAL FROM SCOTT.EMP, SCOTT.DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO;
SELECT DNAME, ENAME, JOB, SAL FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO AND EMP.JOB IN('MANAGER','CLERK')
ORDER BY DNAME;

SELECT D.DNAME, E.ENAME, E.JOB, E.SAL FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;

SELECT D.DNAME, E.ENAME, E.JOB, E.SAL FROM EMP E INNER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO;

SELECT D.DNAME, E.ENAME, E.JOB, E.SAL FROM EMP E INNER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
WHERE E.DEPTNO IN (10,20) AND D.DNAME = 'RESEARCH';

SELECT E.ENAME, E.JOB, S.GRADE FROM EMP E, SALGRADE S
WHERE E.SAL < S.LOSAL AND E.DEPTNO IN (10,30)
ORDER BY E.ENAME;

SELECT E.DEPTNO, D.DNAME, E.ENAME FROM EMP E LEFT OUTER JOIN DEPT D
ON     E.DEPTNO = D.DEPTNO
ORDER BY E.DEPTNO;

SELECT E.DEPTNO, D.DNAME, E.ENAME FROM EMP E RIGHT OUTER JOIN DEPT D
ON     E.DEPTNO = D.DEPTNO
ORDER BY E.DEPTNO;

SELECT D.DEPTNO, D.DNAME, E.ENAME FROM SCOTT.EMP E FULL OUTER JOIN SCOTT.DEPT D
ON     E.DEPTNO = D.DEPTNO
ORDER BY E.DEPTNO;

SELECT ENAME, JOB, DNAME FROM EMP, DEPT;
SELECT ENAME, JOB, DNAME FROM EMP CROSS JOIN DEPT;

SELECT ENAME, JOB, DNAME FROM EMP, DEPT
WHERE EMP.SAL > 2000 AND DEPT.DEPTNO IN (10,20);

SELECT ENAME, JOB, DNAME FROM EMP, DEPT
WHERE EMP.SAL > 2000 OR DEPT.DEPTNO IN (10,20);

SELECT * FROM SALGRADE;
SELECT * FROM EMP;
SELECT E.ENAME, E.JOB, E.SAL, S.GRADE FROM EMP E, SALGRADE S
WHERE E.SAL < S.LOSAL AND E.DEPTNO IN (10,30)
ORDER BY E.ENAME;

CREATE TABLE CUSTOMER2(
                    ID      VARCHAR2(8)         NOT NULL,
                    PWD     VARCHAR2(8)         CONSTRAINT CUSTOMER2_PWD_NN NOT NULL,
                    NAME    VARCHAR2(20),        --이름
                    SEX     CHAR(1),
                    AGE     NUMBER(3)
);
DESC CUSTOMER2
INSERT INTO CUSTOMER2(ID, PWD, NAME, SEX, AGE) VALUES ('xman','ok','kang','M',21);
INSERT INTO CUSTOMER2(ID, PWD, NAME, SEX, AGE) VALUES ('XMAN','no','kim','T',-20);

INSERT INTO CUSTOMER2(ID,NAME,AGE)      VALUES('zman','son',99);
INSERT INTO CUSTOMER2(ID,PWD,NAME,AGE)  VALUES('rman',NULL,'jjang',24);
INSERT INTO CUSTOMER2(ID,PWD,NAME,AGE)  VALUES('','pwd','jjang',24);

UPDATE CUSTOMER2 SET PWD = NULL WHERE ID = 'XMAN';
SELECT *FROM CUSTOMER2;

SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE, SEARCH_CONDITION
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'CUSTOMER2';

SELECT TABLE_NAME, CONSTRAINT_NAME, POSITION, COLUMN_NAME
FROM USER_CONS_COLUMNS
WHERE TABLE_NAME = 'CUSTOMER2' ORDER BY CONSTRAINT_NAME, POSITION;

SELECT * FROM EMP;

SELECT E.ENAME||' "S MANAGER IS '||M.ENAME
FROM EMP E, EMP M 
WHERE E.MGR = M.EMPNO
ORDER BY M.ENAME;

SELECT E1.ENAME||' "S MANAGER IS ' || NVL(E2.ENAME,'NOBODY')
FROM EMP E1 LEFT OUTER JOIN EMP E2
ON E1.MGR = E2.EMPNO
ORDER BY E2.MGR DESC, E1.MGR, E1.EMPNO;

SELECT E.ENAME||' ''S MANAGER IS '||M.ENAME FROM EMP E, EMP M
WHERE E.MGR(+) = M.EMPNO
ORDER BY M.ENAME;

SELECT E.ENAME||' ''S MANAGER IS '||M.ENAME FROM EMP E, EMP M
WHERE E.MGR = M.EMPNO(+)
ORDER BY M.ENAME;

SELECT D.DEPTNO,E.ENAME,E.JOB,E.SAL,
    RANK() OVER(PARTITION BY D.DEPTNO ORDER BY E.SAL DESC) RANK_순위,
    DENSE_RANK()OVER(PARTITION BY D.DEPTNO ORDER BY E.SAL DESC) DENSE_순위
    FROM EMP E,DEPT D
WHERE E.DEPTNO = D.DEPTNO AND E.SAL > 2000
ORDER BY D.DEPTNO;

SELECT D.DEPTNO,D.DNAME,E.ENAME,E.JOB,E.SAL 
FROM EMP E,DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO AND E.SAL > 2000
ORDER BY D.DNAME;


SELECT D.DNAME,NVL(E.ENAME,'비상근 부서'),E.JOB,E.SAL FROM EMP E,DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO
ORDER BY D.DNAME;

SELECT * FROM EMP;
SELECT * FROM DEPT;

SELECT * FROM USER_TABLES;
SELECT * FROM USER_INDEXES;
SELECT * FROM USER_TAB_COLUMNS;

ALTER TABLE CUSTOMER2 ADD CONSTRAINT CUSTOMER2_SEX_CK CHECK (SEX IN('M','F'));

UPDATE CUSTOMER2 SET SEX = 'M' WHERE SEX = 'T';
COMMIT;
ALTER TABLE CUSTOMER2 ADD CONSTRAINT CUSTOMER2_SEX_CK CHECK (SEX IN('M','F'));

SELECT * FROM CUSTOMER2;
INSERT INTO CUSTOMER2(ID, PWD, NAME, SEX, AGE) VALUES('xman','ok','kang','M',21);
INSERT INTO CUSTOMER2(ID, PWD, NAME, SEX, AGE) VALUES('xman','ok','jjang','M',21);
INSERT INTO CUSTOMER2(ID, PWD, NAME, AGE)      VALUES('asura','ok','joo',99);

INSERT INTO CUSTOMER2(ID,PWD,NAME,SEX,AGE)      VALUES('harisu','ok','susu','T',33);
INSERT INTO CUSTOMER2(ID, PWD, NAME, SEX, AGE)  VALUES('shinsun','ok','도사','M',999);

UPDATE CUSTOMER2 SET AGE = AGE + 1;

DROP TABLE CUSTOMER2;
CREATE TABLE CUSTOMER2(
    ID      VARCHAR2(8)         NOT NULL CONSTRAINT CUSTOMER_ID_UK UNIQUE,
    PWD     VARCHAR2(8)         NOT NULL,
    NAME    VARCHAR2(20),
    SEX     CHAR(1) DEFAULT'M'
            CONSTRAINT CUSTOMER_SEX_CK CHECK(SEX IN('M','F')),
    MOBILE  VARCHAR2(14)        UNIQUE,
    AGE     NUMBER(3)           DEFAULT 18
    );
SELECT * FROM CUSTOMER2;
DELETE FROM CUSTOMER2
WHERE ID = '무명';

INSERT INTO CUSTOMER2(ID,PWD,NAME,MOBILE,AGE)    VALUES('xman','ok','kang','011-3333',21);
INSERT INTO CUSTOMER2(ID,PWD,NAME,MOBILE,AGE)    VALUES('XMAN','yes','kim','011-3334',33);
INSERT INTO CUSTOMER2(ID,PWD,NAME,MOBILE,AGE)    VALUES('xman','yes','lee','011-3335',-21);
INSERT INTO CUSTOMER2(ID,PWD,NAME,MOBILE,AGE)    VALUES('yman','yes','lee','011-3333',28);

INSERT INTO CUSTOMER2(ID,PWD,NAME,MOBILE)        VALUES('무명인','yes',NULL,NULL);

ALTER TABLE CUSTOMER2 ADD CONSTRAINT CUSTOMER_NAME_SEX_UK UNIQUE(NAME,SEX);
ALTER TABLE CUSTOMER2 MODIFY(NAME NOT NULL);

INSERT INTO CUSTOMER2(ID, PWD, NAME, SEX) VALUES('rman','yes','syo','M');
INSERT INTO CUSTOMER2(ID, PWD, NAME, SEX) VALUES('Rman','yes','syo','F');
INSERT INTO CUSTOMER2(ID, PWD, NAME, SEX) VALUES('RmaN','yes','syo','M');
SELECT * FROM CUSTOMER2;


SELECT INDEX_NAME, INDEX_TYPE, UNIQUENESS FROM USER_INDEXES
WHERE TABLE_NAME = 'CUSTOMER2';

SELECT INDEX_NAME,COLUMN_POSITION,COLUMN_NAME FROM USER_IND_COLUMNS
WHERE TABLE_NAME = 'CUSTOMER2' ORDER BY INDEX_NAME, COLUMN_POSITION;

SELECT * FROM CUSTOMER2;

SELECT EMPNO, ENAME, SAL, ROUND((RATIO_TO_REPORT(SAL) OVER())*100,2)AS SAL_RATE FROM EMP, DEPT;
SELECT * FROM DEPT;


SELECT D.DNAME,E.ENAME,E.JOB,E.SAL 
FROM EMP E,DEPT D WHERE E.DEPTNO(+) = D.DEPTNO ORDER BY D.DNAME;

SELECT D.DNAME,E.ENAME,E.JOB,E.SAL FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO AND E.SAL > 2000 ORDER BY D.DNAME; // Outer Join 후 필터링

SELECT D.DNAME,E.ENAME,E.JOB,E.SAL FROM EMP E,DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO AND E.SAL(+) > 2000 ORDER BY D.DNAME;

SELECT D.DEPTNO, D.DNAME, E.ENAME, E.JOB, E.SAL, COUNT(*) OVER (PARTITION BY D.DEPTNO ORDER BY E.SAL DESC) AS RANK
FROM EMP E
JOIN DEPT D ON E.DEPTNO = D.DEPTNO
WHERE E.SAL > 2000
ORDER BY D.DEPTNO;