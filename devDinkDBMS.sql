/*SELECT ENAME, HIREDATE, SAL, COMM FROM EMP ORDER BY ENAME;
SELECT ENAME, HIREDATE, SAL, COMM FROM EMP ORDER BY ENAME asc;
SELECT ENAME, HIREDATE, SAL, COMM FROM EMP ORDER BY HIREDATE desc;
SELECT ENAME, HIREDATE, SAL, COMM FROM EMP ORDER BY ENAME;
SELECT ENAME, HIREDATE, SAL, COMM FROM EMP ORDER BY 2;
SELECT ENAME, SAL * 12 as 연봉 FROM EMP ORDER BY 연봉;

SELECT * FROM CUSTOMER ORDER BY CREDIT_LIMIT DESC;
SELECT * FROM CUSTOMER WHERE NAME = '전지현';
SELECT * FROM CUSTOMER WHERE NAME = '김하영';
SELECT * FROM CUSTOMER WHERE NAME = '신성호';


SELECT JOB FROM EMP;
SELECT UNIQUE JOB FROM EMP;
SELECT DISTINCT JOB FROM EMP;

SELECT DISTINCT DEPTNO, JOB FROM EMP;
SELECT JOB FROM EMP ORDER BY JOB;

SELECT DISTINCT JOB, DEPTNO FROM EMP;
SELECT DISTINCT JOB, DEPTNO FROM EMP;
SELECT DISTINCT COMM FROM EMP;



SELECT UNIQUE JOB FROM EMP;
SELECT DISTINCT JOB FROM EMP;
SELECT DISTINCT JOB FROM EMP;

SELECT DISTINCT DEPTNO, JOB FROM EMP;
SELECT JOB FROM EMP ORDER BY JOB;

SELECT DISTINCT JOB, DEPTNO FROM EMP;
SELECT DISTINCT JOB, DEPTNO FROM EMP;
SELECT COMM FROM EMP WHERE COMM IS NOT NULL;
SELECT DISTINCT COMM FROM EMP;

SELECT ENAME, HIREDATE,
    TO_CHAR(HIREDATE,'YYYY/MM/DD'),
    TO_CHAR(HIREDATE,'YYYY/MM/DD HH24:MI:SS'),
    TO_CHAR(HIREDATE,'RRRR/MM/DD HH24:MI:SS'),
    TO_CHAR(HIREDATE,'YYYY/MM/DD HH24:MI:SS')
FROM EMP;
    
SELECT ENAME FROM EMP WHERE ENAME like '%L%E%';


SELECT ENAME,HIREDATE FROM EMP WHERE HIREDATE like '81%';
SELECT ENAME,SAL FROM EMP WHERE SAL like 2%;
SELECT ENAME,SAL FROM EMP WHERE SAL like '2%';
SELECT ENAME,SAL FROM EMP WHERE TO_CHAR(SAL) like '2%';
SELECT * FROM CUSTOMER WHERE NAME = '신성호';

SELECT NAME, ADDRESS1, ADDRESS2 FROM CUSTOMER WHERE NAME like '김%';

SELECT ENAME FROM EMP WHERE ENAME like '%\_\%' ESCAPE '\';
SELECT ENAME,EMPNO FROM EMP;

UPDATE EMP
SET ENAME ='HA_0'
WHERE EMPNO = '7499';

SELECT ENAME,EMPNO FROM EMP;
SELECT ENAME FROM EMP WHERE ENAME like '%\_%' ESCAPE '\';

SELECT EMPNO, JOB FROM EMP WHERE EMPNO IN (7369,7561,7654);
SELECT EMPNO, JOB FROM EMP WHERE EMPNO = 7369 or EMPNO = 7521 or EMPNO = 7521 or EMPNO = 7654;
SELECT EMPNO, ENAME, JOB FROM EMP WHERE JOB IN ('clerk','manager');
SELECT EMPNO, ENAME, HIREDATE FROM EMP WHERE HIREDATE IN ('81/05/01','81/02/20');
SELECT EMPNO, ENAME, JOB, DEPTNO FROM EMP
WHERE (JOB, DEPTNO) in(('MANAGER',20),('CLERK',20));

SELECT ENAME, SAL FROM EMP WHERE SAL = ALL(1500,2450,3000);
SELECT * FROM SALGRADE;
SELECT * FROM SALGRADE WHERE 7000 BETWEEN LOSAL AND HISAL;

SELECT ENAME, SAL, HIREDATE FROM EMP
WHERE HIREDATE BETWEEN to_date('81/02/20','yy/mm/dd') AND to_date('82/12/09','yy/mm/dd');

SELECT (EMPNO ||','|| ENAME ||','|| JOB ||','|| SAL ||','|| DEPTNO) FROM EMP;
*/
SELECT (EMPNO ||','|| ENAME ||','|| JOB ||','|| SAL ||','|| DEPTNO) FROM EMP;

SET FEEDBACK OFF
SET HEADING OFF
SET TRIMSPOOL ON
SET COLSEP ','

SPOOL C:\Users\DA\SQL\fileoutput.csv

SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP;

SPOOL OFF

SELECT * FROM SALGRADE WHERE 3000 >= LOSAL AND 3000 <= HISAL ;

SELECT * FROM EMP WHERE SAL = '3000';
SELECT DNAME FROM EMP;

SELECT * FROM EMP WHERE TO_CHAR(SAL) = '3000';
SELECT * FROM EMP WHERE HIREDATE = '80/12/17';
SELECT * FROM EMP WHERE TO_CHAR(HIREDATE,'YY/MM/DD') ='80/12/17';
SELECT * FROM EMP WHERE HIREDATE LIKE '80/12/17%';

SELECT DEPTNO, ENAME, DECODE(DEPTNO,10,'ACCOUNTING',20,'RESERCH',30,'SALES','ETC') FROM EMP ORDER BY DEPTNO;
SELECT COMM, DECODE(COMM, NULL, 0, COMM) FROM EMP;

SELECT DEPTNO, ENAME,
    CASE DEPTNO WHEN 10 THEN 'ACCOUNTING'
                WHEN 20 THEN 'RESEARCH'
                WHEN 30 THEN 'SALES'
                ELSE         'ETC'
    END AS DEPARTMENT
FROM EMP
ORDER BY DEPTNO;

SELECT DEPTNO, ENAME, SAL,
        CASE WHEN SAL >= 4800 THEN 'HIGH'
             WHEN SAL BETWEEN 3000 AND 4799 THEN 'MID'
             WHEN SAL >= 1000 AND SAL <= 2999 THEN 'LOW'
        ELSE                                        'Passion pay'
        END   SAL_GRADE
FROM EMP
ORDER BY DEPTNO;

SELECT DEPTNO, ENAME, COMM,
        CASE    WHEN COMM >= 1000 THEN 'GREAT'
                WHEN COMM >= 500 THEN 'GOOD'
                WHEN COMM >= 0 THEN 'Bad'
        ELSE                        'Dreadful'
        END     COMM_GRADE
FROM EMP
ORDER BY DEPTNO;

ALTER SESSION SET NLS_DATE_FORMAT ='YYYY-MM-DD-HH24:MI:SS';

select sid from v$mystat;

SELECT HIREDATE, months_between(sysdate,HIREDATE),months_between(HIREDATE,sysdate)FROM EMP;
SELECT sysdate, add_months(sysdate,3),add_months(sysdate,-1) FROM dual;
SELECT sysdate, last_day(sysdate),next_day(sysdate,'일요일'),next_day(sysdate,2)FROM dual;
SELECT sysdate, round(sysdate,'YEAR'),round(sysdate,'MONTH'),round(sysdate,'DAY'),round(sysdate) FROM dual;

SELECT TO_CHAR(SYSDATE,'DDD'),TO_CHAR(SYSDATE,'DD'),TO_CHAR(SYSDATE,'D') FROM DUAL;
SELECT LAST_DAY(SYSDATE)FROM DUAL;
SELECT LAST_DAY(SYSDATE) FROM DUAL;
SELECT COMM, DECODE(COMM, NULL, 0, COMM) FROM EMP;

SELECT to_char(sysdate, 'MM"월"DD"일')as mmdd1,
       to_char(sysdate,'MM')||'월'||to_char(sysdate,'DD')||'일' as mmdd2 FROM dual;
SELECT EXTRACT(YEAR FROM SYSDATE),EXTRACT(MONTH FROM SYSDATE),EXTRACT(DAY FROM SYSDATE) FROM dual;


SELECT TO_CHAR(SYSDATE,'D') FROM DUAL;


        
ALTER SESSION SET NLS_TERRITORY = 'KOREA'; 

SELECT SYSDATE, TO_CHAR(SYSDATE,'YEAR'), TO_CHAR(SYSDATE,'YEAR'),TO_CHAR(SYSDATE,'YYYY'),TO_CHAR(SYSDATE,'YY') FROM DUAL;

SELECT TO_CHAR(SYSDATE,'MONTH'),TO_CHAR(SYSDATE,'MON'),
        TO_CHAR(SYSDATE,'Mon'), TO_CHAR(SYSDATE,'mon'),
        TO_CHAR(SYSDATE,'MM'), TO_CHAR(SYSDATE,'mm') FROM DUAL;

SELECT SYSDATE,
    TO_CHAR(SYSDATE,'DAY'), TO_CHAR(SYSDATE,'Day'), TO_CHAR(SYSDATE,'DY'),
    TO_CHAR(SYSDATE,'dy'), TO_CHAR(SYSDATE,'DD'), TO_CHAR(SYSDATE,'dd') FROM DUAL;
    
SELECT 123456, REPLACE(TO_CHAR(123456,'999999'),' ','*'), LENGTH(TO_CHAR(123456,'999999')),
        LENGTH(TO_CHAR(123456,'fm999999')) FROM DUAL;
        
SELECT sysdate, last_day(sysdate), TO_CHAR(SYSDATE,'D'), TO_CHAR(last_day(sysdate),'D')FROM dual;

SELECT DEPTNO, ENAME, DECODE(DEPTNO,10,'ACCOUNTING',20,'RESERCH',30,'SALES','ETC') FROM EMP ORDER BY DEPTNO;
SELECT sysdate,TO_CHAR(last_day(sysdate),'D'),
    DECODE(TO_CHAR(last_day(sysdate),'D'),5,last_day(sysdate),'D'),TRUNC(TO_CHAR(last_day(sysdate),'D')) AS DD FROM DUAL;
    




DESC EMP;

SELECT TO_CHAR(12345*123.45,'999,999.99'),TO_CHAR(12345*123.45,'99,999,999.99') FROM DUAL;
SELECT TO_CHAR(SAL,'$999,999'),     REPLACE(TO_CHAR(SAL,'$999,999'),'','?'),
       TO_CHAR(SAL,'L999,999'),     TO_CHAR(SAL,'999,999L'),    TO_CHAR(SAL,'fm999,999L')
       FROM EMP;
       
       
SELECT TRUNC(last_day(sysdate),'DAY')  FROM DUAL;
SELECT NEXT_DAY((LAST_DAY(SYSDATE)-7),6) FROM DUAL;
SELECT sysdate, next_day(sysdate,'일요일') FROM DUAl;
SELECT DEPTNO, COUNT(*) FROM SCOTT.EMP GROUP BY DEPTNO;
SELECT DEPTNO, AVG(SAL), SUM(SAL) FROM EMP GROUP BY DEPTNO;
SELECT DEPTNO, AVG(SAL), SUM(SAL) FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;

SELECT systimestamp, to_char(systimestamp,'YYYY-MM-DD HH24:MI:SS.FF2') FROM dual;

SELECT to_char(hiredate,'YYYY'), MIN(SAL), MAX(SAL) FROM SCOTT.EMP GROUP BY to_char(hiredate,'YYYY') ORDER BY to_char(hiredate,'YYYY');

SELECT * FROM EMP;
SELECT DEPTNO, ENAME FROM EMP;
SELECT DEPTNO, COUNT(*) FROM SCOTT.EMP GROUP BY DEPTNO;

SELECT 
     SUM(CASE WHEN DEPTNO = 10 THEN COUNT(*) END) AS "10번 부서"
    , SUM(CASE WHEN DEPTNO = 20 THEN COUNT(*) END) AS "20번 부서"
    , SUM(CASE WHEN DEPTNO = 30 THEN COUNT(*) END) AS "30번 부서"
FROM SCOTT.EMP
GROUP BY DEPTNO;

SELECT DEPTNO, 
       COUNT(*) AS "전체 인원",
       COUNT(CASE WHEN DEPTNO = 10 THEN 1 END) AS "10번 부서 인원",
       COUNT(CASE WHEN DEPTNO = 20 THEN 1 END) AS "20번 부서 인원",
       COUNT(CASE WHEN DEPTNO = 30 THEN 1 END) AS "30번 부서 인원"
FROM SCOTT.EMP
GROUP BY DEPTNO;

SELECT DEPTNO,
    CASE WHEN DEPTNO = 10 THEN COUNT(*) END) AS "10번 부서"
    ,CASE WHEN DEPTNO = 20 THEN COUNT(*) END) AS "20번 부서"
    ,CASE WHEN DEPTNO = 30 THEN COUNT(*) END) AS "30번 부서"
FROM SCOTT.EMP
GROUP BY DEPTNO;

SELECT * FROM CUSTOMER;
SELECT * FROM CUSTOMER sample(10);
SELECT * FROM CUSTOMEr sample(5) SEED (10);

SELECT DEPTNO, MIN(SAL), MAX(SAL) FROM SCOTT.EMP GROUP BY DEPTNO;

SELECT to_char(hiredate,'YYYY'), MIN(SAL), MAX(SAL) FROM SCOTT.EMP GROUP BY to_char(hiredate,'YYYY') ORDER BY to_char(hiredate,'YYYY');
SELECT 
    SUM(CASE WHEN DEPTNO = 10 THEN COUNT(*) END) AS "10번 부서",
    SUM(CASE WHEN DEPTNO = 10 THEN COUNT(*) END) AS "10번 부서",
    SUM(CASE WHEN DEPTNO = 10 THEN COUNT(*) END) AS "10번 부서"
    FROM SCOTT.EMP
GROUP BY DEPTNO;

SELECT
    SUM(CASE WHEN DEPTNO = 10 THEN COUNT(*) END) AS "10번 부서",
    SUM(CASE WHEN DEPTNO = 20 THEN COUNT(*) END) AS "20번 부서",
    SUM(CASE WHEN DEPTNO = 30 THEN COUNT(*) END) AS "30번 부서"
FROM SCOTT.EMP
GROUP BY DEPTNO;

SELECT * FROM CUSTOMER sample(10);
SELECT * FROM CUSTOMER sample(5) seed(5);
SELECT NEXT_DAY((LAST_DAY(SYSDATE)-7),6) FROM DUAL;

ALTER SESSION SET NLS_DATE_FORMAT = 'RR/MM/DD';
SELECT * FROM EMP WHERE HIREDATE LIKE '82%';
ALTER SESSION SET NLS_DATE_FORMAT = 'DD-MON-RR';
SELECT * FROM EMP WHERE HIREDATE LIKE '82%';
SELECT * FROM EMP WHERE HIREDATE LIKE '%82';
SELECT * FROM EMP WHERE HIREDATE LIKE '%82%';

SELECT COUNT(*), SUM(COMM), SUM(COMM)/COUNT(*)/COUNT(*), AVG(COMM), SUM(COMM)/COUNT(COMM) FROM EMP;

SELECT COUNT(*), COUNT(EMPNO), COUNT(MGR), COUNT(COMM) FROM EMP;

SELECT to_char(hiredate,'YYYY'), MIN(SAL), MAX(SAL) FROM SCOTT.EMP GROUP BY to_char(hiredate,'YYYY') ORDER BY to_char(hiredate,'YYYY');
DESC DEPT;

INSERT INTO DEPT VALUES(50,'연구소1','서울');
DESC DEPT;
INSERT INTO DEPT(DEPTNO, DNAME, LOC) VALUES(51,'연구소2','대전');
SELECT * FROM DEPT;
INSERT INTO DEPT VALUES('중부영업점','대구');
INSERT INTO DEPT(DNAME, LOC) VALUES('중부영업점','대구');
INSERT INTO DEPT(DNAME,LOC) VALUES('중부지점','대구');
SELECT * FROM DEPT;
INSERT INTO DEPT(DEPTNO, DNAME, LOC) VALUES(52,'북부지점',NULL);
INSERT INTO DEPT(DEPTNO, DNAME, LOC) VALUES(53,'남부지점','');
COMMIT;
DELETE FROM DEPT WHERE DNAME='연구소1';
COMMIT;

INSERT ALL
    INTO DEPT (DEPTNO, DNAME, LOC) VALUES (55,'Multi','INSERT1')
    INTO DEPT (DEPTNO, DNAME, LOC) VALUES (56,'Multi','INSERT2')
    INTO DEPT (DEPTNO, DNAME, LOC) VALUES (57,'Multi','INSERT3')
SELECT 1 FROM dual;
SELECT * FROM DEPT;

ROLLBACK;
SELECT * FROM DEPT;

CREATE TABLE BONUS_2 AS SELECT * FROM BONUS WHERE 1=2;
DESC BONUS_2;
SELECT * FROM BONUS_2;

INSERT ALL
    WHEN COMM > 0 THEN INTO BONUS
    WHEN COMM IS NULL THEN INTO BONUS_2
SELECT ename, job, sal, comm FROM emp WHERE job in ('CLERK','SALESMAN');

SELECT * FROM EMP;
SELECT * FROM BONUS;
SELECT * FROM BONUS_2;

ROLLBACK;
SELECT * FROM BONUS;
SELECT * FROM BONUS_2;

SELECT * FROM DEPT;

UPDATE DEPT SET DNAME = ' M연구소' WHERE DEPTNO = 50;
UPDATE DEPT SET DNAME = ' T연구소',LOC='인천' WHERE DEPTNO = 51;
SELECT * FROM DEPT WHERE DEPTNO IN (50,51);
COMMIT;
UPDATE DEPT SET LOC = '미개척지';
SELECT * FROM DEPT;
ROLLBACK;
SELECT * FROM DEPT;

select dname, replace(dname,' ','*')from dept;
update dept set dname = trim(dname);
select dname, replace(dname,'','*')from dept;
commit;

DELETE FROM DEPT WHERE LOC IS NULL or DEPTNO IS NULL;
SELECT * FROM DEPT;
COMMIT;
select * from customer;
DELETE DEPT;
SELECT * FROM DEPT;
ROLLBACK;
SELECT * FROM DEPT;

update emp set sal=0 where deptno =10;
select deptno, sal from emp where deptno = 10;
commit;
select deptno, sal from emp where deptno = 10;

update emp set sal = 9999 where deptno = 10;
commit;

SELECT * FROM DEPT;

UPDATE DEPT SET LOC = LTRIM(LOC);
SELECT * FROM DEPT;
COMMIT;

SELECT * FROM DEPT;

SELECT * FROM PROJECT0406;
DESC PLACECODE;
DESC PROJECTD;

DELETE FROM PROJECT0406 WHERE 상세영업상태명 = '폐쇄' ;
SELECT * FROM PROJECT0406;
COMMIT;

UPDATE PROJECT0406
SET 소재지전체주소 = 도로명전체주소
WHERE 소재지전체주소 is null;

SELECT * FROM PROJECT0406;
COMMIT;
UPDATE PROJECT0406
SET 소재지전체주소 = SUBSTR(소재지전체주소, 1, INSTR(소재지전체주소, ' ', 1, 2) - 1);
ROLLBACK;

DELETE FROM PROJECT0406 WHERE 상세영업상태명 = '폐쇄' ;

SELECT 소재지전체주소 FROM PROJECT0406 WHERE 소재지전체주소 LIKE '%구%';

SELECT 소재지전체주소,
    CASE
         WHEN REGEXP_COUNT(소재지전체주소, '구') >= 2 THEN
           SUBSTR(소재지전체주소, INSTR(소재지전체주소, '구', 1, 3) + 1)
         ELSE
           SUBSTR(소재지전체주소, 1, INSTR(소재지전체주소, '구') +1)
       END AS 결과
FROM PROJECT0406;

ALTER TABLE PROJECT0406
ADD (결과 VARCHAR2(255));


UPDATE PROJECT0406
SET 결과 = CASE
             WHEN REGEXP_COUNT(소재지전체주소, '구') >= 2 THEN
               SUBSTR(소재지전체주소, INSTR(소재지전체주소, '구', 1, 3) + 1)
             ELSE
               SUBSTR(소재지전체주소, 1, INSTR(소재지전체주소, '구') +1)
           END;
           
           
DELETE FROM PROJECT0406 WHERE 결과 NOT LIKE '%구';
SELECT 결과,COUNT(*) FROM SCOTT.PROJECT0406 GROUP BY 결과 ORDER BY COUNT(*) DESC;

SELECT * FROM CUSTOMER WHERE EMAIL LIKE '%naver.com%';

SELECT *
FROM CUSTOMER
WHERE EMAIL LIKE '%naver.com%';

CREATE TABLE NAVER_CUSTOMER AS
SELECT * FROM CUSTOMER WHERE EMAIL LIKE '%naver.com%';

SELECT * FROM NUM_NAVER_TARGET;
SELECT * FROM NAVER_CUSTOMER;

CREATE TABLE EMAIL_LIST AS
SELECT DISTINCT SUBSTR(EMAIL, INSTR(EMAIL, '@') + 1) AS LIST
FROM CUSTOMER;

ALTER TABLE EMAIL_LIST ADD (구분번호 NUMBER);
UPDATE EMAIL_LIST SET 구분번호 = ROWNUM;
SELECT * FROM EMAIL_LIST;
